# Scale pod up & down using Karpenter

# Set up Cluster
kwokctl create cluster --enable-metrics-server --enable-crds=Metric --enable-crds=ClusterResourceUsage --enable-crds=ResourceUsage

# Apply metrics usage
kubectl apply -f https://github.com/kubernetes-sigs/kwok/releases/download/v0.6.0/metrics-usage.yaml

# Create a node
kwokctl scale node --replicas 1 --param '.allocatable.cpu="4000m"'

# Set up image repository
export DEFAULT_REGION=eu-west-2
export ACCOUNT_ID=$(aws sts get-caller-identity | jq -r '.Account')

output=$(aws ecr create-repository \
    --repository-name kwok \
    --image-scanning-configuration scanOnPush=true \
    --region "${DEFAULT_REGION}")

echo "$output"

export KO_DOCKER_REPO="${ACCOUNT_ID}.dkr.ecr.${DEFAULT_REGION}.amazonaws.com/dev"
aws ecr get-login-password --region "${DEFAULT_REGION}" | docker login --username AWS --password-stdin "${KO_DOCKER_REPO}"

# Clone Karpenter repository
git clone https://github.com/kubernetes-sigs/karpenter.git

# Install Karpenter provider
cd karpenter
make install-kwok
echo 'export PATH="$PATH:${GOPATH:-$HOME/go}/bin"' >> ~/.bashrc
source ~/.bashrc
echo 'export PATH=$PATH:$(go env GOPATH)/bin' >> ~/.bashrc
source ~/.bashrc
make toolchain
make apply
cd ..

# Create node pool
kubectl apply -f node-pool.yaml

# Create deployment
kubectl apply -f deployment.yaml

# Delete the cluster
kwokctl delete cluster

# Delete image repository
aws ecr delete-repository \
    --repository-name kwok \
    --region "${DEFAULT_REGION}" \
    --force














# Install controller gen and toolchain
go install sigs.k8s.io/controller-tools/cmd/controller-gen@latest
make toolchain
export PATH=$PATH:$(go env GOPATH)/bin
echo 'export PATH=$PATH:$(go env GOPATH)/bin' >> ~/.bashrc
source ~/.bashrc
make apply

# Generate instance type
cd ..
#wget https://raw.githubusercontent.com/kubernetes-sigs/karpenter/main/kwok/examples/instance_types.json
